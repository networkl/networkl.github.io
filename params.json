{"name":"Networkl","tagline":"NetworkL extends the scope of the NetworkX package to eXtra-Large time-varying graphs. It supports the manipulation and efficient longitudinal analysis of complex networks","body":"### NetworkL brings (L)arge network analysis on your desk\r\nNetworkL includes a set of optimized algorithms and data structures which allow to \r\ncarry out network analysis of large time-varying networks on user-level workstations.\r\n\r\nNetworkL reduces the memory load of Distance Matrix up to 50% and perform re-computation of shortest paths in centiseconds.\r\n\r\nFor this reason it is particularly suitable for the analysis of Large Longitudinal network dataset.\r\n\r\n```python\r\nimport networkx as nx\r\nimport networkl as nl\r\nfrom random import randrange\r\n\r\nN=500\r\nG = nx.erdos_renyi_graph(N,0.1)                                #create a graph\r\nSparseD = nl.sparse_distance_matrix(G)                         #compute the Sparse Distance Matrix\r\n\r\nnew_edges = [(randrange(N),randrange(N)) for c in range(100)]\r\nfor i,j in new_edges:                                 \r\n\tif G.has_edge(i,j) or i==j:\r\n\t\tcontinue\r\n\tprint 'adding edge (%s,%s)'%(i,j)\r\n\tnl.update_distance_matrix(G,SparseD,i,j,mode='add')    #add edges and update Distance Matrix\r\n\t\r\nprint SparseD[5][12]                                           #accessing distance values\r\n```\r\n\r\n","google":"UA-61681688-1","note":"Don't delete this file! It's used internally to help with page regeneration."}